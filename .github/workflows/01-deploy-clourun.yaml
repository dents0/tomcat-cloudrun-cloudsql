name: Deploy container image to Cloud Run

on:
  workflow_dispatch:
    inputs:
      service_name:
        description: "Cloud Run Service Name"
        required: true
      image_tag:
        description: "Image version/tag"
        default: 'latest'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          AR_HOST: ${{ secrets.AR_HOST }}
          AR_REPO: ${{ secrets.AR_REPO }}
          IMG_NAME: ${{ secrets.IMG_NAME }}
          IMG_TAG: ${{ github.event.inputs.image_tag }}
          RUN_SERVICE: ${{ github.event.inputs.service_name }}
          RUN_REGION: ${{ secrets.RUN_REGION }}
          SQL_CONN: ${{ secrets.SQL_CONN }}
          SQL_DB: ${{ secrets.SQL_DB }}
          SQL_DB_USER: ${{ secrets.SQL_DB_USER }}
          SQL_DB_PASS: ${{ secrets.SQL_DB_PASS }}
          SQL_PRIVATE_IP: ${{ secrets.SQL_PRIVATE_IP }}
          VPC_CONN: ${{ secrets.VPC_CONN }}
        run: |-
          gcloud run deploy ${RUN_SERVICE} --image ${AR_HOST}${AR_REPO}${IMG_NAME}:${IMG_TAG} \
            --project ${PROJECT_ID} \
            --region ${RUN_REGION} \
            --allow-unauthenticated \
            --vpc-connector=${VPC_CONN} \
            --add-cloudsql-instances ${SQL_CONN} \
            --set-env-vars INSTANCE_CONNECTION_NAME=${SQL_CONN} \
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=${SQL_CONN} \
            --set-env-vars DB_NAME=${SQL_DB} \
            --set-env-vars DB_USER=${SQL_DB_USER} \
            --set-env-vars DB_PASS=${SQL_DB_PASS} \
            --set-env-vars DB_HOST=${SQL_PRIVATE_IP} \
            --set-env-vars DB_PORT="5432"
